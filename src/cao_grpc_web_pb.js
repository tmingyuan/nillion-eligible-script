/**
 * @fileoverview gRPC-Web generated client stub for nildrop_service
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v4.25.6
// source: cao.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');

const proto = {};
proto.nildrop_service = require('./cao_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.nildrop_service.ContractClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.nildrop_service.ContractPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.nildrop_service.HealthRequest,
 *   !proto.nildrop_service.HealthResponse>}
 */
const methodDescriptor_Contract_Health = new grpc.web.MethodDescriptor(
  '/nildrop_service.Contract/Health',
  grpc.web.MethodType.UNARY,
  proto.nildrop_service.HealthRequest,
  proto.nildrop_service.HealthResponse,
  /**
   * @param {!proto.nildrop_service.HealthRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.nildrop_service.HealthResponse.deserializeBinary
);


/**
 * @param {!proto.nildrop_service.HealthRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.nildrop_service.HealthResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.nildrop_service.HealthResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.nildrop_service.ContractClient.prototype.health =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/nildrop_service.Contract/Health',
      request,
      metadata || {},
      methodDescriptor_Contract_Health,
      callback);
};


/**
 * @param {!proto.nildrop_service.HealthRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.nildrop_service.HealthResponse>}
 *     Promise that resolves to the response
 */
proto.nildrop_service.ContractPromiseClient.prototype.health =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/nildrop_service.Contract/Health',
      request,
      metadata || {},
      methodDescriptor_Contract_Health);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.nildrop_service.VersionRequest,
 *   !proto.nildrop_service.VersionResponse>}
 */
const methodDescriptor_Contract_Version = new grpc.web.MethodDescriptor(
  '/nildrop_service.Contract/Version',
  grpc.web.MethodType.UNARY,
  proto.nildrop_service.VersionRequest,
  proto.nildrop_service.VersionResponse,
  /**
   * @param {!proto.nildrop_service.VersionRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.nildrop_service.VersionResponse.deserializeBinary
);


/**
 * @param {!proto.nildrop_service.VersionRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.nildrop_service.VersionResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.nildrop_service.VersionResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.nildrop_service.ContractClient.prototype.version =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/nildrop_service.Contract/Version',
      request,
      metadata || {},
      methodDescriptor_Contract_Version,
      callback);
};


/**
 * @param {!proto.nildrop_service.VersionRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.nildrop_service.VersionResponse>}
 *     Promise that resolves to the response
 */
proto.nildrop_service.ContractPromiseClient.prototype.version =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/nildrop_service.Contract/Version',
      request,
      metadata || {},
      methodDescriptor_Contract_Version);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.nildrop_service.TempVerificationRequest,
 *   !proto.nildrop_service.TempVerificationResponse>}
 */
const methodDescriptor_Contract_TempVerify = new grpc.web.MethodDescriptor(
  '/nildrop_service.Contract/TempVerify',
  grpc.web.MethodType.UNARY,
  proto.nildrop_service.TempVerificationRequest,
  proto.nildrop_service.TempVerificationResponse,
  /**
   * @param {!proto.nildrop_service.TempVerificationRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.nildrop_service.TempVerificationResponse.deserializeBinary
);


/**
 * @param {!proto.nildrop_service.TempVerificationRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.nildrop_service.TempVerificationResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.nildrop_service.TempVerificationResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.nildrop_service.ContractClient.prototype.tempVerify =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/nildrop_service.Contract/TempVerify',
      request,
      metadata || {},
      methodDescriptor_Contract_TempVerify,
      callback);
};


/**
 * @param {!proto.nildrop_service.TempVerificationRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.nildrop_service.TempVerificationResponse>}
 *     Promise that resolves to the response
 */
proto.nildrop_service.ContractPromiseClient.prototype.tempVerify =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/nildrop_service.Contract/TempVerify',
      request,
      metadata || {},
      methodDescriptor_Contract_TempVerify);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.nildrop_service.RegistrationRequest,
 *   !proto.nildrop_service.RegistrationResponse>}
 */
const methodDescriptor_Contract_Register = new grpc.web.MethodDescriptor(
  '/nildrop_service.Contract/Register',
  grpc.web.MethodType.UNARY,
  proto.nildrop_service.RegistrationRequest,
  proto.nildrop_service.RegistrationResponse,
  /**
   * @param {!proto.nildrop_service.RegistrationRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.nildrop_service.RegistrationResponse.deserializeBinary
);


/**
 * @param {!proto.nildrop_service.RegistrationRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.nildrop_service.RegistrationResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.nildrop_service.RegistrationResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.nildrop_service.ContractClient.prototype.register =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/nildrop_service.Contract/Register',
      request,
      metadata || {},
      methodDescriptor_Contract_Register,
      callback);
};


/**
 * @param {!proto.nildrop_service.RegistrationRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.nildrop_service.RegistrationResponse>}
 *     Promise that resolves to the response
 */
proto.nildrop_service.ContractPromiseClient.prototype.register =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/nildrop_service.Contract/Register',
      request,
      metadata || {},
      methodDescriptor_Contract_Register);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.nildrop_service.AddTermsRequest,
 *   !proto.nildrop_service.TermsResponse>}
 */
const methodDescriptor_Contract_AddTerms = new grpc.web.MethodDescriptor(
  '/nildrop_service.Contract/AddTerms',
  grpc.web.MethodType.UNARY,
  proto.nildrop_service.AddTermsRequest,
  proto.nildrop_service.TermsResponse,
  /**
   * @param {!proto.nildrop_service.AddTermsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.nildrop_service.TermsResponse.deserializeBinary
);


/**
 * @param {!proto.nildrop_service.AddTermsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.nildrop_service.TermsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.nildrop_service.TermsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.nildrop_service.ContractClient.prototype.addTerms =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/nildrop_service.Contract/AddTerms',
      request,
      metadata || {},
      methodDescriptor_Contract_AddTerms,
      callback);
};


/**
 * @param {!proto.nildrop_service.AddTermsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.nildrop_service.TermsResponse>}
 *     Promise that resolves to the response
 */
proto.nildrop_service.ContractPromiseClient.prototype.addTerms =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/nildrop_service.Contract/AddTerms',
      request,
      metadata || {},
      methodDescriptor_Contract_AddTerms);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.nildrop_service.CheckTermsRequest,
 *   !proto.nildrop_service.TermsResponse>}
 */
const methodDescriptor_Contract_CheckTerms = new grpc.web.MethodDescriptor(
  '/nildrop_service.Contract/CheckTerms',
  grpc.web.MethodType.UNARY,
  proto.nildrop_service.CheckTermsRequest,
  proto.nildrop_service.TermsResponse,
  /**
   * @param {!proto.nildrop_service.CheckTermsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.nildrop_service.TermsResponse.deserializeBinary
);


/**
 * @param {!proto.nildrop_service.CheckTermsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.nildrop_service.TermsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.nildrop_service.TermsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.nildrop_service.ContractClient.prototype.checkTerms =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/nildrop_service.Contract/CheckTerms',
      request,
      metadata || {},
      methodDescriptor_Contract_CheckTerms,
      callback);
};


/**
 * @param {!proto.nildrop_service.CheckTermsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.nildrop_service.TermsResponse>}
 *     Promise that resolves to the response
 */
proto.nildrop_service.ContractPromiseClient.prototype.checkTerms =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/nildrop_service.Contract/CheckTerms',
      request,
      metadata || {},
      methodDescriptor_Contract_CheckTerms);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.nildrop_service.EligibilityRequest,
 *   !proto.nildrop_service.EligibilityResponse>}
 */
const methodDescriptor_Contract_Eligible = new grpc.web.MethodDescriptor(
  '/nildrop_service.Contract/Eligible',
  grpc.web.MethodType.UNARY,
  proto.nildrop_service.EligibilityRequest,
  proto.nildrop_service.EligibilityResponse,
  /**
   * @param {!proto.nildrop_service.EligibilityRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.nildrop_service.EligibilityResponse.deserializeBinary
);


/**
 * @param {!proto.nildrop_service.EligibilityRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.nildrop_service.EligibilityResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.nildrop_service.EligibilityResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.nildrop_service.ContractClient.prototype.eligible =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/nildrop_service.Contract/Eligible',
      request,
      metadata || {},
      methodDescriptor_Contract_Eligible,
      callback);
};


/**
 * @param {!proto.nildrop_service.EligibilityRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.nildrop_service.EligibilityResponse>}
 *     Promise that resolves to the response
 */
proto.nildrop_service.ContractPromiseClient.prototype.eligible =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/nildrop_service.Contract/Eligible',
      request,
      metadata || {},
      methodDescriptor_Contract_Eligible);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.nildrop_service.AddIdRequest,
 *   !proto.nildrop_service.AddIdResponse>}
 */
const methodDescriptor_Contract_AddId = new grpc.web.MethodDescriptor(
  '/nildrop_service.Contract/AddId',
  grpc.web.MethodType.UNARY,
  proto.nildrop_service.AddIdRequest,
  proto.nildrop_service.AddIdResponse,
  /**
   * @param {!proto.nildrop_service.AddIdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.nildrop_service.AddIdResponse.deserializeBinary
);


/**
 * @param {!proto.nildrop_service.AddIdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.nildrop_service.AddIdResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.nildrop_service.AddIdResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.nildrop_service.ContractClient.prototype.addId =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/nildrop_service.Contract/AddId',
      request,
      metadata || {},
      methodDescriptor_Contract_AddId,
      callback);
};


/**
 * @param {!proto.nildrop_service.AddIdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.nildrop_service.AddIdResponse>}
 *     Promise that resolves to the response
 */
proto.nildrop_service.ContractPromiseClient.prototype.addId =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/nildrop_service.Contract/AddId',
      request,
      metadata || {},
      methodDescriptor_Contract_AddId);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.nildrop_service.AddIdRequest,
 *   !proto.nildrop_service.DeleteIdResponse>}
 */
const methodDescriptor_Contract_DeleteId = new grpc.web.MethodDescriptor(
  '/nildrop_service.Contract/DeleteId',
  grpc.web.MethodType.UNARY,
  proto.nildrop_service.AddIdRequest,
  proto.nildrop_service.DeleteIdResponse,
  /**
   * @param {!proto.nildrop_service.AddIdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.nildrop_service.DeleteIdResponse.deserializeBinary
);


/**
 * @param {!proto.nildrop_service.AddIdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.nildrop_service.DeleteIdResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.nildrop_service.DeleteIdResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.nildrop_service.ContractClient.prototype.deleteId =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/nildrop_service.Contract/DeleteId',
      request,
      metadata || {},
      methodDescriptor_Contract_DeleteId,
      callback);
};


/**
 * @param {!proto.nildrop_service.AddIdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.nildrop_service.DeleteIdResponse>}
 *     Promise that resolves to the response
 */
proto.nildrop_service.ContractPromiseClient.prototype.deleteId =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/nildrop_service.Contract/DeleteId',
      request,
      metadata || {},
      methodDescriptor_Contract_DeleteId);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.nildrop_service.DeleteClaimRequest,
 *   !proto.nildrop_service.DeleteClaimResponse>}
 */
const methodDescriptor_Contract_DeleteClaim = new grpc.web.MethodDescriptor(
  '/nildrop_service.Contract/DeleteClaim',
  grpc.web.MethodType.UNARY,
  proto.nildrop_service.DeleteClaimRequest,
  proto.nildrop_service.DeleteClaimResponse,
  /**
   * @param {!proto.nildrop_service.DeleteClaimRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.nildrop_service.DeleteClaimResponse.deserializeBinary
);


/**
 * @param {!proto.nildrop_service.DeleteClaimRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.nildrop_service.DeleteClaimResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.nildrop_service.DeleteClaimResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.nildrop_service.ContractClient.prototype.deleteClaim =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/nildrop_service.Contract/DeleteClaim',
      request,
      metadata || {},
      methodDescriptor_Contract_DeleteClaim,
      callback);
};


/**
 * @param {!proto.nildrop_service.DeleteClaimRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.nildrop_service.DeleteClaimResponse>}
 *     Promise that resolves to the response
 */
proto.nildrop_service.ContractPromiseClient.prototype.deleteClaim =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/nildrop_service.Contract/DeleteClaim',
      request,
      metadata || {},
      methodDescriptor_Contract_DeleteClaim);
};


module.exports = proto.nildrop_service;

